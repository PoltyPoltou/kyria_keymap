/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "french.h"

#define AZERTY 0
#define DEVELOP 1
#define SYMBOL 2
#define FR 3
#define NAV 4
#define KEYPAD 5
#define SYS 6
#define GAMING 7

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE SPACE>;
};

&sk {
    release-after-ms = <1000>;
};

&sl {
    release-after-ms = <3000>;
};

/ {

    behaviors {
        maj_space: maj_space{
            compatible = "zmk,behavior-mod-morph";
            label = "space is a undersore";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp FR_UNDS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        mrphlt: mrphlt {
            compatible = "zmk,behavior-hold-tap";
            label = "modmorph_hold_tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&maj_space>;
        };
        sl_ht: sl_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "sticky_hold_tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&sk>;
        };
        hrm_ht: hrm_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "home row mod hold tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            global-quick-tap;
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        accent_ht: accent_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "hold tap for accents";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        circ_ht: circ_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "hold tap for circ trema";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&trema>, <&circ>;
        };
        cust_mt: cust_mt {
            compatible = "zmk,behavior-hold-tap";
            label = "personal mod tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
        cust_ht: cust_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "personal hold tap with 2 kp";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
        td_caps: td_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_CAPS";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHIFT>, <&caps_word>;
        };
        copy_paste_cut: copy_paste_cut {
            compatible = "zmk,behavior-tap-dance";
            label = "copy cut tapdance";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LC(FR_C)>, <&kp LC(FR_V)>, <&kp LC(FR_X)>;
        };
        td_nb: td_nb {
            compatible = "zmk,behavior-tap-dance";
            label = "number of taps correspond to the number";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp KP_N1>,<&kp KP_N2>,<&kp KP_N3>,<&kp KP_N4>,<&kp KP_N5>,<&kp KP_N5>,<&kp KP_N6>,<&kp KP_N7>,<&kp KP_N8>,<&kp KP_N9>;
        };
        td_layers: td_layers {
            compatible = "zmk,behavior-tap-dance";
            label = "td for dev and gaming";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&tog DEVELOP>, <&tog GAMING>;
        };
        td_quotes: td_quotes {
            compatible = "zmk,behavior-tap-dance";
            label = "quotes tapdance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp FR_QUOT>, <&kp FR_DQUO>;
        };
        combos {
            compatible = "zmk,combos";
            system {
                timeout-ms = <500>;
                key-positions = <40 49>;
                bindings = <&sl SYS>;
                layers = <AZERTY DEVELOP>;
            };
        };
    };
    macros {
        trema: trema {
            label = "add a trema macro";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings
                = <&kp FR_DIAE>,
                <&macro_param_1to1>,
                <&kp MACRO_PLACEHOLDER>;
        };
        circ: circ {
            label = "add a circ macro";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings
                = <&kp FR_CIRC>,
                <&macro_param_1to1>,
                <&kp MACRO_PLACEHOLDER>;
        };
        not_dead: not_dead {
            label = "transform a dead key into a non dead key";
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            wait-ms = <0>;
            tap-ms = <20>;
            bindings
                = <&macro_param_1to1>,
                <&kp MACRO_PLACEHOLDER>,
                <&kp SPACE>;
        };

    };
    keymap {
        compatible = "zmk,keymap";

        AZERTY_layer {
            bindings = <
            &kp ESC &accent_ht FR_AGRV FR_A &kp FR_Z &kp FR_E &kp FR_R &kp FR_T                                  &kp FR_Y &accent_ht FR_UGRV FR_U &kp FR_I &kp FR_O &kp FR_P &kp FR_CIRC
            &kp TAB &hrm_ht LGUI FR_Q &hrm_ht LALT FR_S &hrm_ht LSHIFT FR_D &hrm_ht LCTRL FR_F &kp FR_G             &kp FR_H &hrm_ht RCTRL FR_J &hrm_ht RSHIFT FR_K &hrm_ht LALT FR_L &kp FR_M &cust_ht FR_COLN FR_COMM
            &td_caps &kp FR_W &kp FR_X &kp FR_C &kp FR_V &kp FR_B &kp CAPS &copy_paste_cut             &kp DEL &kp PRINTSCREEN &kp FR_N &kp FR_EACU &kp FR_EGRV &td_quotes &kp FR_DOT &cust_ht FR_QUES FR_EXLM
            &kp LALT &none &sl_ht KEYPAD LSHIFT &mrphlt NAV 0 &sl SYMBOL                               &sk LALT &cust_mt FR BSPC &sk LCTRL &kp LGUI &td_layers
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;

        };

        DEVELOP_layer {
            bindings = <
            &trans &kp FR_A &trans &trans &trans &trans                                   &trans &kp FR_U &trans &trans &trans &cust_ht FR_BSLS FR_SLSH
            &trans &trans &trans &trans &trans &trans                                   &trans &trans &trans &trans &trans &kp FR_COLN
            &trans &trans &trans &trans &trans &trans &trans &trans      &trans &trans &trans &kp FR_COMM &kp FR_SCLN &kp FR_DQUO &trans &trans
                            &trans &trans &trans &trans &trans           &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;

        };

        SYMBOL_layer {
            bindings = <
            &kp FR_PND &kp FR_AT &kp FR_LABK &kp FR_LPRN &kp FR_RPRN &kp FR_RABK                                                    &kp FR_PIPE &kp FR_LBRC &kp FR_RBRC &not_dead FR_TILD &none &kp FR_CURR
            &kp FR_EURO &kp FR_HASH &hrm_ht LALT FR_DLR &hrm_ht LSHIFT FR_MINS &hrm_ht LCTRL FR_UNDS &kp FR_PERC        		&kp FR_QUOT &hrm_ht RCTRL FR_EQL &hrm_ht RSHIFT FR_PLUS &hrm_ht LALT FR_AMPR &none &not_dead FR_GRV
            &none &none &kp FR_0 &kp FR_LCBR &kp FR_RCBR &td_nb &trans &trans                                                       &trans &trans &none &none &none &none &none &kp FR_SECT
            &trans &trans &trans &trans &trans                                                                                      &trans &trans &trans &trans &trans
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;

        };

        FR_layer {
            bindings = <
            &none &circ_ht FR_A FR_A &none &circ_ht E E &none &none                &none &circ U &circ_ht I I &circ O &none &kp FR_CIRC
            &none &none &none &none &none &none 				   &none &none &none &none &none &cust_ht FR_COLN FR_COMM
            &none &none &none &kp FR_CCED &none &none &trans &trans    &trans &trans &none &kp FR_EACU &kp FR_EGRV &td_quotes &kp FR_DOT &cust_ht FR_QUES FR_EXLM
            &trans &trans &trans &trans &trans                                     &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp UP DOWN>;
        };

        NAV_layer {
            bindings = <
            &kp LA(F4) &none &kp F1 &kp F2 &kp F3 &kp F4                                 &none &kp PG_DN &kp PG_UP &none &none &kp LA(F4)
            &kp ENTER &kp ENTER &hrm_ht LALT F5 &hrm_ht LSHIFT F6 &hrm_ht LCTRL F7 &kp F8   &kp LEFT &hrm_ht LCTRL DOWN &hrm_ht RSHIFT UP &hrm_ht LALT RIGHT &none &none
            &none &none &kp F9 &kp F10 &kp F11 &kp F12 &trans &trans                &trans &trans &none &kp HOME &kp END &none &none &none
            &trans &trans &trans &trans &trans                                      &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp UP DOWN>;
        };

        KEYPAD_layer {
            bindings = <
            &none &none &none &none &kp FR_SLSH &kp KP_MULTIPLY                                     &none &kp KP_N7 &kp KP_N8 &kp KP_N9 &none &kp KP_NUMLOCK
            &none &none &kp LALT &kp LSHIFT &mt LCTRL FR_MINS &kp FR_PLUS                           &none &hrm_ht LCTRL KP_N4 &hrm_ht RSHIFT KP_N5 &hrm_ht LALT KP_N6 &none &none 
            &none &none &none &none &kp FR_COMM &kp FR_DOT &trans &trans                                 &trans &trans &none &kp KP_N1 &kp KP_N2 &kp KP_N3 &none &none 
            &trans &trans &trans &trans &trans                                                  &trans &trans &kp KP_N0 &kp KP_N0 &kp KP_N0
            >;

            sensor-bindings = <&inc_dec_kp C_AL_PREV_TASK C_AL_NEXT_TASK &inc_dec_kp PG_UP PG_DN>;
        };
        SYS_layer {
            bindings = <
            &bt BT_CLR &none &none &none &none &bt BT_SEL 0                     &bt BT_SEL 4 &none &none &none &none &none
            &none &none &none &none &none &bt BT_SEL 1                          &bt BT_SEL 5 &none &none &none &none &none
            &out OUT_TOG &none &none &none &none &bt BT_SEL 2 &trans &bootloader     &bootloader &trans &bt BT_SEL 6 &none &none &none &none &none
            &trans &trans &trans &trans &sys_reset                                  &sys_reset &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp UP DOWN>;
        };
        GAMING_layer {
            bindings = <
            &kp ESC &none &kp FR_A &kp FR_Z &kp FR_E &kp FR_R                                   &kp FR_Y &kp FR_U &kp FR_I &kp FR_O &kp FR_P &not_dead FR_CIRC
            &kp LSHIFT &kp TAB &kp FR_Q &kp FR_S &kp FR_D &kp FR_F              &kp FR_H &hrm_ht RCTRL FR_J &hrm_ht RSHIFT FR_K &hrm_ht LALT FR_L &kp FR_M &kp FR_HASH
            &kp LCTRL &none &kp FR_W &kp FR_X &kp FR_C &kp FR_V &kp CAPS &copy_paste_cut             &kp DEL &kp PRINTSCREEN &kp FR_N &kp FR_COMM &kp FR_SCLN &td_quotes &kp FR_DOT &cust_ht FR_QUES FR_EXLM
            &kp LALT &kp LGUI &sl_ht KEYPAD LSHIFT &mrphlt NAV 0 &kp FR_COLN                               &kp RET &cust_mt SYMBOL BSPC &cust_ht FR_BSLS FR_SLSH &sk LCTRL &td_layers
            >;
            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;

        };
    };
};
